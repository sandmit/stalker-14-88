using Content.Shared._Stalker.PdaMessenger;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client._Stalker.PdaMessenger;

[GenerateTypedNameReferences]
public sealed partial class MessengerUiFragment : BoxContainer
{
    public event Action<PdaMessage>? OnSendMessage;
    public event Action<string>? OnLogin;

    private List<PdaChat> _chats = new();

    public MessengerUiFragment()
    {
        RobustXamlLoader.Load(this);

        ToWrite.OnPressed += _ =>
        {
            MenuSelection.Visible = false;
            MenuRead.Visible = false;
            MenuWrite.Visible = true;
        };

        ToRead.OnPressed += _ =>
        {
            MenuSelection.Visible = false;
            MenuRead.Visible = true;
            MenuWrite.Visible = false;
        };

        WriteToSelection.OnPressed += _ =>
        {
            MenuSelection.Visible = true;
            MenuRead.Visible = false;
            MenuWrite.Visible = false;
        };

        ReadToSelection.OnPressed += _ =>
        {
            MenuSelection.Visible = true;
            MenuRead.Visible = false;
            MenuWrite.Visible = false;
        };

        ChatToRead.OnPressed += _ =>
        {
            MenuRead.Visible = true;
            MenuChat.Visible = false;
        };

        SendMessage.OnPressed += ev =>
        {
            OnSendMessage?.Invoke(new PdaMessage(InputTitle.Text, Rope.Collapse(ContentInput.TextRope), InputReciver.Text));
        };
    }

    public void UpdateState(List<PdaChat> chats)
    {
        _chats = chats;

        ChatContainer.RemoveAllChildren();
        foreach (var chat in _chats)
        {
            AddChat(chat);
        }
    }

    private void AddChat(PdaChat chat)
    {
        var uiChat = new MessengerUiChat(chat);

        uiChat.Read.OnPressed += _ =>
        {
            MenuRead.Visible = false;
            MenuChat.Visible = true;

            MessageContainer.RemoveAllChildren();
            foreach (var message in chat.Messages)
            {
                var uiMessage = new MessengerUiMessage(message);
                MessageContainer.AddChild(uiMessage);
            }
        };

        ChatContainer.AddChild(uiChat);
    }
}
